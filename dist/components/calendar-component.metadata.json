[{"__symbolic":"module","version":3,"metadata":{"CalendarComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"template":"\n  <ion-header>\n    <ion-navbar [color]=\"_color\">\n\n        <ion-buttons start [hidden]=\"!showYearPicker\">\n            <ion-select [(ngModel)]=\"year\" (ngModelChange)=\"changedYearSelection()\" interface=\"popover\">\n                <ion-option *ngFor=\"let y of years\" value=\"{{y}}\">{{y}}</ion-option>\n            </ion-select>\n        </ion-buttons>\n\n        <ion-title>{{title | translate}}</ion-title>\n\n        <ion-buttons end>\n            <button ion-button clear *ngIf=\"closeLabel !== '' && !closeIcon\" (click)=\"onCancel()\">\n                {{closeLabel | translate}}\n            </button>\n            <button ion-button icon-only clear *ngIf=\"closeLabel === '' || closeIcon\" (click)=\"onCancel()\">\n                <ion-icon name=\"close\"></ion-icon>\n            </button>\n            <!--<button ion-button icon-only clear [disabled]=\"!canDone()\" (click)=\"done()\">\n                <ion-icon name=\"checkmark\"></ion-icon>\n            </button>-->\n        </ion-buttons>\n    </ion-navbar>\n      <ion-toolbar class=\"show-dates-bar\" no-border>\n        <ul class=\"date-items\">\n            <li *ngIf=\"_d.isRadio === false && dayTemp[0]\">{{ ((dayTemp[0].time | date: 'EEEE, dd MMM y').split(',')[0]|translate)+\", \"+pad(fns.getDate(dayTemp[0].time))+\" \"+(pad(fns.getMonth(dayTemp[0].time) + 1).toString() | translate) + \" \" + fns.getYear(dayTemp[0].time)}}</li>\n            <li class=\"full-row\" *ngIf=\"_d.isRadio === true && dayTemp[0]\">{{ ((dayTemp[0].time | date: 'EEEE, dd MMM y').split(',')[0]|translate)+\", \"+pad(fns.getDate(dayTemp[0].time))+\" \"+(pad(fns.getMonth(dayTemp[0].time) + 1).toString() | translate) + \" \" + fns.getYear(dayTemp[0].time)}}</li>\n            <li *ngIf=\"_d.isRadio === false && dayTemp[1]\" class=\"slash\">&#47;</li>\n            <!--<li *ngIf=\"_d.isRadio == false && dayTemp[1]\">{{ dayTemp[1].time | date: 'EEEE, dd MMM y' }}</li>-->\n            <li *ngIf=\"_d.isRadio === false && dayTemp[1]\">{{ ((dayTemp[1].time | date: 'EEEE, dd MMM y').split(',')[0]|translate)+\", \"+pad(fns.getDate(dayTemp[1].time))+\" \"+(pad(fns.getMonth(dayTemp[1].time) + 1).toString() | translate) + \" \" + fns.getYear(dayTemp[1].time)}}</li>\n        </ul>\n      </ion-toolbar>\n    <calendar-week-title *ngIf=\"mode === 'day' || mode === 'week' || mode === 'custom'\" [color]=\"_color\" [weekArray]=\"weekdaysTitle\" [weekStart]=\"weekStartDay\" no-border-top>\n    </calendar-week-title>\n  </ion-header>\n\n  <ion-content *ngIf=\"mode === 'day' || mode === 'week' || mode === 'custom'\" (ionScroll)=\"onScroll($event)\" class=\"calendar-page\" [ngClass]=\"{'multiSelection': !options.isRadio}\" no-bounce>\n\n      <div #months>\n          <div *ngFor=\"let month of calendarMonths;let i = index;\" class=\"month-box\" [attr.id]=\"'month-' + i\">\n              <!--<h4 class=\"text-center month-title\">{{month.original.date | date:monthTitleFilterStr}}</h4>-->\n              <h4 class=\"text-center month-title\">{{ (pad(fns.getMonth(month.original.date) + 1).toString() | translate) + \" \" + fns.getYear(month.original.date) }}</h4>\n              <ion2-month [month]=\"month\" [mode]=\"mode\" [isRadio]=\"options.isRadio\" [isSaveHistory]=\"isSaveHistory\" [id]=\"_id\" (onChange)=\"onChange($event)\"\n                  (onSelectDate)=\"onSelectDate($event) \"[(ngModel)]=\"dayTemp\">\n              </ion2-month>\n          </div>\n      </div>\n\n      <ion-infinite-scroll (ionInfinite)=\"nextMonth($event)\">\n          <ion-infinite-scroll-content></ion-infinite-scroll-content>\n      </ion-infinite-scroll>\n  </ion-content>\n\n  <ion-content *ngIf=\"mode === 'month'\" no-bounce>\n    <monthpick [today]=\"defaultDate\" (onSelectMonth)=\"selectMonthHandler($event)\"></monthpick>\n  </ion-content>\n  <ion-footer no-shadow>\n\t\t<button ion-button full [disabled]=\"!canDone()\" (click)=\"done()\">{{\"Save\" | translate}}</button>\n  </ion-footer>","selector":"calendar-page"}]}],"members":{"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":[{"__symbolic":"reference","module":"ionic-angular","name":"Content"}]}]}],"monthsEle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["months"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Renderer"},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"},{"__symbolic":"reference","module":"ionic-angular","name":"NavParams"},{"__symbolic":"reference","module":"ionic-angular","name":"ViewController"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef"},{"__symbolic":"reference","module":"../services/calendar.service","name":"CalendarService"},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService"}]}],"ionViewDidLoad":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}],"findCssClass":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"selectMonthHandler":[{"__symbolic":"method"}],"selectHandler":[{"__symbolic":"method"}],"onSelectDate":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}],"pad":[{"__symbolic":"method"}],"dateToString":[{"__symbolic":"method"}],"done":[{"__symbolic":"method"}],"canDone":[{"__symbolic":"method"}],"getHistory":[{"__symbolic":"method"}],"createYearPicker":[{"__symbolic":"method"}],"nextMonth":[{"__symbolic":"method"}],"backwardsMonth":[{"__symbolic":"method"}],"scrollToDefaultDate":[{"__symbolic":"method"}],"onScroll":[{"__symbolic":"method"}],"findInitMonthNumber":[{"__symbolic":"method"}],"changedYearSelection":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"CalendarComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"template":"\n  <ion-header>\n    <ion-navbar [color]=\"_color\">\n\n        <ion-buttons start [hidden]=\"!showYearPicker\">\n            <ion-select [(ngModel)]=\"year\" (ngModelChange)=\"changedYearSelection()\" interface=\"popover\">\n                <ion-option *ngFor=\"let y of years\" value=\"{{y}}\">{{y}}</ion-option>\n            </ion-select>\n        </ion-buttons>\n\n        <ion-title>{{title | translate}}</ion-title>\n\n        <ion-buttons end>\n            <button ion-button clear *ngIf=\"closeLabel !== '' && !closeIcon\" (click)=\"onCancel()\">\n                {{closeLabel | translate}}\n            </button>\n            <button ion-button icon-only clear *ngIf=\"closeLabel === '' || closeIcon\" (click)=\"onCancel()\">\n                <ion-icon name=\"close\"></ion-icon>\n            </button>\n            <!--<button ion-button icon-only clear [disabled]=\"!canDone()\" (click)=\"done()\">\n                <ion-icon name=\"checkmark\"></ion-icon>\n            </button>-->\n        </ion-buttons>\n    </ion-navbar>\n      <ion-toolbar class=\"show-dates-bar\" no-border>\n        <ul class=\"date-items\">\n            <li *ngIf=\"_d.isRadio === false && dayTemp[0]\">{{ ((dayTemp[0].time | date: 'EEEE, dd MMM y').split(',')[0]|translate)+\", \"+pad(fns.getDate(dayTemp[0].time))+\" \"+(pad(fns.getMonth(dayTemp[0].time) + 1).toString() | translate) + \" \" + fns.getYear(dayTemp[0].time)}}</li>\n            <li class=\"full-row\" *ngIf=\"_d.isRadio === true && dayTemp[0]\">{{ ((dayTemp[0].time | date: 'EEEE, dd MMM y').split(',')[0]|translate)+\", \"+pad(fns.getDate(dayTemp[0].time))+\" \"+(pad(fns.getMonth(dayTemp[0].time) + 1).toString() | translate) + \" \" + fns.getYear(dayTemp[0].time)}}</li>\n            <li *ngIf=\"_d.isRadio === false && dayTemp[1]\" class=\"slash\">&#47;</li>\n            <!--<li *ngIf=\"_d.isRadio == false && dayTemp[1]\">{{ dayTemp[1].time | date: 'EEEE, dd MMM y' }}</li>-->\n            <li *ngIf=\"_d.isRadio === false && dayTemp[1]\">{{ ((dayTemp[1].time | date: 'EEEE, dd MMM y').split(',')[0]|translate)+\", \"+pad(fns.getDate(dayTemp[1].time))+\" \"+(pad(fns.getMonth(dayTemp[1].time) + 1).toString() | translate) + \" \" + fns.getYear(dayTemp[1].time)}}</li>\n        </ul>\n      </ion-toolbar>\n    <calendar-week-title *ngIf=\"mode === 'day' || mode === 'week' || mode === 'custom'\" [color]=\"_color\" [weekArray]=\"weekdaysTitle\" [weekStart]=\"weekStartDay\" no-border-top>\n    </calendar-week-title>\n  </ion-header>\n\n  <ion-content *ngIf=\"mode === 'day' || mode === 'week' || mode === 'custom'\" (ionScroll)=\"onScroll($event)\" class=\"calendar-page\" [ngClass]=\"{'multiSelection': !options.isRadio}\" no-bounce>\n\n      <div #months>\n          <div *ngFor=\"let month of calendarMonths;let i = index;\" class=\"month-box\" [attr.id]=\"'month-' + i\">\n              <!--<h4 class=\"text-center month-title\">{{month.original.date | date:monthTitleFilterStr}}</h4>-->\n              <h4 class=\"text-center month-title\">{{ (pad(fns.getMonth(month.original.date) + 1).toString() | translate) + \" \" + fns.getYear(month.original.date) }}</h4>\n              <ion2-month [month]=\"month\" [mode]=\"mode\" [isRadio]=\"options.isRadio\" [isSaveHistory]=\"isSaveHistory\" [id]=\"_id\" (onChange)=\"onChange($event)\"\n                  (onSelectDate)=\"onSelectDate($event) \"[(ngModel)]=\"dayTemp\">\n              </ion2-month>\n          </div>\n      </div>\n\n      <ion-infinite-scroll (ionInfinite)=\"nextMonth($event)\">\n          <ion-infinite-scroll-content></ion-infinite-scroll-content>\n      </ion-infinite-scroll>\n  </ion-content>\n\n  <ion-content *ngIf=\"mode === 'month'\" no-bounce>\n    <monthpick [today]=\"defaultDate\" (onSelectMonth)=\"selectMonthHandler($event)\"></monthpick>\n  </ion-content>\n  <ion-footer no-shadow>\n\t\t<button ion-button full [disabled]=\"!canDone()\" (click)=\"done()\">{{\"Save\" | translate}}</button>\n  </ion-footer>","selector":"calendar-page"}]}],"members":{"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":[{"__symbolic":"reference","module":"ionic-angular","name":"Content"}]}]}],"monthsEle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["months"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Renderer"},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"},{"__symbolic":"reference","module":"ionic-angular","name":"NavParams"},{"__symbolic":"reference","module":"ionic-angular","name":"ViewController"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef"},{"__symbolic":"reference","module":"../services/calendar.service","name":"CalendarService"},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService"}]}],"ionViewDidLoad":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}],"findCssClass":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"selectMonthHandler":[{"__symbolic":"method"}],"selectHandler":[{"__symbolic":"method"}],"onSelectDate":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}],"pad":[{"__symbolic":"method"}],"dateToString":[{"__symbolic":"method"}],"done":[{"__symbolic":"method"}],"canDone":[{"__symbolic":"method"}],"getHistory":[{"__symbolic":"method"}],"createYearPicker":[{"__symbolic":"method"}],"nextMonth":[{"__symbolic":"method"}],"backwardsMonth":[{"__symbolic":"method"}],"scrollToDefaultDate":[{"__symbolic":"method"}],"onScroll":[{"__symbolic":"method"}],"findInitMonthNumber":[{"__symbolic":"method"}],"changedYearSelection":[{"__symbolic":"method"}]}}}}]